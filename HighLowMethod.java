/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

/**
 *
 * @author Student
 */
public class HighLowMethod extends javax.swing.JFrame {

    /**
     * Creates new form HighLowMethod
     */
    public HighLowMethod() {
        initComponents();
    }
    
    Connection c;
    PreparedStatement p;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        highestactivitycost = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lowestactivitycost = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        highestactivityunits = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lowestactivityunits = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        variablecostperunit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        totalvariablecost = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        fixedcosthighestactivity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        totalcost = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fixedcostlowestactivity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        salesunits = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        costfunction = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Highest Activity Cost");

        jLabel2.setText("Lowest Activity Cost");

        jLabel3.setText("Highest Activity Units");

        jLabel4.setText("Lowest Activity Units");

        jLabel5.setText("Variable Cost per Unit");

        variablecostperunit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variablecostperunitActionPerformed(evt);
            }
        });

        jLabel6.setText("Total Variable Cost");

        jLabel7.setText("Fixed Cost for Highest Activity");

        jLabel8.setText("Total Cost");

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Fixed Cost for Lowest Activity");

        jLabel10.setText("Sales Units");

        salesunits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                salesunitsKeyReleased(evt);
            }
        });

        jLabel11.setText("Cost Function");

        costfunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costfunctionActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel12.setText("High Low Method");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(127, 127, 127)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(highestactivityunits, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                                    .addComponent(lowestactivitycost, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(highestactivitycost, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lowestactivityunits)))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(115, 115, 115))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(224, 224, 224)
                            .addComponent(salesunits, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(127, 127, 127)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(fixedcosthighestactivity, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalvariablecost, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(variablecostperunit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(224, 224, 224)
                                .addComponent(totalcost, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(127, 127, 127)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fixedcostlowestactivity)
                                    .addComponent(costfunction, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(highestactivitycost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lowestactivitycost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(highestactivityunits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lowestactivityunits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(variablecostperunit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(totalvariablecost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(fixedcosthighestactivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(fixedcostlowestactivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(costfunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(salesunits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(totalcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(132, 132, 132))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void variablecostperunitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variablecostperunitActionPerformed
        String highestAC = highestactivitycost.getText();
        double highestActivityCost = Double.parseDouble(highestAC);
        
        String lowestAC = lowestactivitycost.getText();
        double lowestActivityCost = Double.parseDouble(lowestAC);
        
        String highestAU = highestactivityunits.getText();
        int highestActivityUnits = Integer.parseInt(highestAU);
        
        String lowestAU = lowestactivityunits.getText();
        int lowestActivityUnits = Integer.parseInt(lowestAU);
        
        double UnitVC = (highestActivityCost-lowestActivityCost)/(highestActivityUnits-lowestActivityUnits);
        String UnitVariableCost = String.valueOf(UnitVC);
        variablecostperunit.setText(UnitVariableCost);
        
        
        try{
           c = DriverManager.getConnection("jdbc:mysql://localhost:3306/cvpanalysis","root","nclc123");
           p = c.prepareStatement("");
           
           
           
           
        }catch(Exception e){
            
        }
        
        
        
        
        
            // TODO add your handling code here:
    }//GEN-LAST:event_variablecostperunitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String highestAC = highestactivitycost.getText();
        double highestActivityCost = Double.parseDouble(highestAC);
        
        String lowestAC = lowestactivitycost.getText();
        double lowestActivityCost = Double.parseDouble(lowestAC);
        
        String highestAU = highestactivityunits.getText();
        int highestActivityUnits = Integer.parseInt(highestAU);
        
        String lowestAU = lowestactivityunits.getText();
        int lowestActivityUnits = Integer.parseInt(lowestAU);
        
        double unitVC = (highestActivityCost-lowestActivityCost)/(highestActivityUnits-lowestActivityUnits);
        String unitVariableCost = String.valueOf(unitVC);
        variablecostperunit.setText(unitVariableCost);
        
        String uVC = variablecostperunit.getText();
        double unitVarCost = Double.parseDouble(uVC);
         
        double fCostHA = highestActivityCost-(unitVarCost*highestActivityUnits);
        String fixedCostHighActivity = String.valueOf(fCostHA);
        fixedcosthighestactivity.setText(fixedCostHighActivity);
        
        double fCostLA = lowestActivityCost-(unitVarCost*lowestActivityUnits);
        String fixedCostLowActivity = String.valueOf(fCostLA);
        fixedcostlowestactivity.setText(fixedCostLowActivity);
         
        String vC  = variablecostperunit.getText();
       
        
        String fC = fixedcosthighestactivity.getText();
     
     
       
       String tC = fC +"+"+" "+ vC+"* x";
      costfunction.setText(tC);
      
      
        
        
//                highestActivityCost-(variablecostperunit*highestActivityUnits); 
        


// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void costfunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costfunctionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costfunctionActionPerformed

    private void salesunitsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salesunitsKeyReleased
      String highestAC = highestactivitycost.getText();
        double highestActivityCost = Double.parseDouble(highestAC);
        
        String lowestAC = lowestactivitycost.getText();
        double lowestActivityCost = Double.parseDouble(lowestAC);
        
        String highestAU = highestactivityunits.getText();
        int highestActivityUnits = Integer.parseInt(highestAU);
        
        String lowestAU = lowestactivityunits.getText();
        int lowestActivityUnits = Integer.parseInt(lowestAU);
        
        double unitVC = (highestActivityCost-lowestActivityCost)/(highestActivityUnits-lowestActivityUnits);
        String unitVariableCost = String.valueOf(unitVC);
        variablecostperunit.setText(unitVariableCost);
        
        String uVC = variablecostperunit.getText();
        double unitVarCost = Double.parseDouble(uVC);
         
        double fCostHA = highestActivityCost-(unitVarCost*highestActivityUnits);
        String fixedCostHighActivity = String.valueOf(fCostHA);
        fixedcosthighestactivity.setText(fixedCostHighActivity);
        
        double fCostLA = lowestActivityCost-(unitVarCost*lowestActivityUnits);
        String fixedCostLowActivity = String.valueOf(fCostLA);
        fixedcostlowestactivity.setText(fixedCostLowActivity);
         
        String vC  = variablecostperunit.getText();
       
        
        String fC = fixedcosthighestactivity.getText();
        
     
       
       String tC = fC +"+"+" "+ vC+"* x";
      costfunction.setText(tC);
      
        
        String sUnit = salesunits.getText();
      int salesUnit = Integer.parseInt(sUnit);
      double  totalVC = salesUnit*unitVarCost;
      String totalVariableCost = String.valueOf(totalVC);
      totalvariablecost.setText(totalVariableCost);
      
      double tCost = fCostLA+totalVC;
      String totalCost = String.valueOf(tCost);
      totalcost.setText(totalCost);
       // TODO add your handling code here:
    }//GEN-LAST:event_salesunitsKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HighLowMethod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HighLowMethod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HighLowMethod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HighLowMethod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HighLowMethod().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField costfunction;
    private javax.swing.JTextField fixedcosthighestactivity;
    private javax.swing.JTextField fixedcostlowestactivity;
    private javax.swing.JTextField highestactivitycost;
    private javax.swing.JTextField highestactivityunits;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lowestactivitycost;
    private javax.swing.JTextField lowestactivityunits;
    private javax.swing.JTextField salesunits;
    private javax.swing.JTextField totalcost;
    private javax.swing.JTextField totalvariablecost;
    private javax.swing.JTextField variablecostperunit;
    // End of variables declaration//GEN-END:variables
}
